version: '3.8'

services:
  next_app:
    container_name: discord_clone
    user: node

    # db container will start before the next_app container.
    depends_on:
      - db

    build:
      context: . #the location of the Dockerfile
      dockerfile: Dockerfile.dev

    # port mapping allows browser to access the app running in the container, and the app to access the database running in the db container.
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. (Adding the "ports" property to this file will not forward from a Codespace.)
    ports:
      - 3000:3000

    # creats a bind mount. A bind mount is a type of volume that maps a host file or directory to a container file or directory. This is useful for development, because it allows you to edit the code on your host machine and run it in the container.
    volumes:
      - ..:/workspaces/discord_clone:cached
      #  install npm packages on your host machine and have them immediately available inside the Docker container. It also means that the Docker container doesn't need to have its own separate node_modules directory, which can save disk space.
      - ../node_modules:/workspaces/discord_clone/node_modules:cached

    environment:
      env_file: ../.env.local

    # Overrides default command, and keeps the container running after the "npm start" process ends.
    command: sleep infinity
    # The network_mode property specifies the network mode for the container. The service:db value tells Docker to use the same network as the db container.
    # Runs next_app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

  db:
    container_name: db
    image: postgres:latest

    # The unless-stopped value tells Docker to restart the container unless it is explicitly stopped.
    restart: unless-stopped

    volumes:
      - postgres-data:/var/lib/postgresql/data

    environment:
      env_file: ../.env.local
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally. (Adding the "ports" property to this file will not forward from a Codespace.)
    ports:
      - 5432:5432

# The volumes property creates a named volume managed by Docker. the volume will persist even after the container is removed.
volumes:
  postgres-data:
  discord_clone_node_modules:
