version: '3.8'

services:
  next_app:
    container_name: next_app
    user: node

    # db container will start before the next_app container.
    depends_on:
      - db

    build:
      # context must be set to the root of the project
      context: ..
      dockerfile: .devcontainer/Dockerfile.dev

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. (Adding the "ports" property to this file will not forward from a Codespace.)
    # ports:
    #  -

    # Volumes are the mechanism for persisting data generated by and used by Docker containers. these line here creats a bind mount, a type of volume that maps a host file or directory to a container file or directory.
    # this allows for real-time synchronization of changes between your local machine and the Docker container. Any changes you make to files in your local directory will be immediately reflected in the Docker container, and vice versa.
    volumes:
      # When using bind mount with docker-outside-of-docker feature, the directory to mount must be specified by host path. This is because the Docker daemon inside the container does not have access to the host's filesystem. This environment variable allows you to refer to the Workspace host path. The default value ../ is used if its env variable is not set, so that the docker-compose.yaml file can work when it is run outside of the container
      - ${LOCAL_WORKSPACE_FOLDER:-../}:/workspaces/discord-clone:cached
      # By mapping node_modules and prisma as a volume, the Docker container can access and use these dependencies just as if they were installed within the container itself. This can save significant time and resources because you don't need to reinstall your project's dependencies every time you build your Docker container.
      - ${LOCAL_WORKSPACE_FOLDER:-../}/node_modules:/workspaces/discord-clone/node_modules:cached
      - ${LOCAL_WORKSPACE_FOLDER:-../}/prisma:/workspaces/discord-clone/prisma:cached

    env_file:
      - ../.env.development

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs next_app on the same network as the db container, allows "forwardPorts" in devcontainer.json function.
    networks:
      - next_app_network

  db:
    container_name: db
    image: postgres:16

    restart: unless-stopped

    volumes:
      - postgres-data:/var/lib/postgresql/data:cached

    env_file:
      - ../.env.development

    networks:
      - next_app_network

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally. (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  node_modules:
  prisma:
  postgres-data:

# By default, Docker provides three network drivers: bridge, none, and host. The bridge network is the default network a Docker container gets attached to if no other network is specified. The bridge driver creates a private network internal to the host so containers on this network can communicate.
networks:
  next_app_network:
    driver: bridge
